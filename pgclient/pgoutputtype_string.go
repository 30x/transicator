// Code generated by "stringer -type PgOutputType ."; DO NOT EDIT

package pgclient

import "fmt"

const (
	_PgOutputType_name_0 = "BindCloseDescribeMsgExecute"
	_PgOutputType_name_1 = "Flush"
	_PgOutputType_name_2 = "ParseQuery"
	_PgOutputType_name_3 = "Sync"
	_PgOutputType_name_4 = "Terminate"
	_PgOutputType_name_5 = "CopyDoneOutCopyDataOut"
	_PgOutputType_name_6 = "PasswordMessage"
)

var (
	_PgOutputType_index_0 = [...]uint8{0, 4, 9, 20, 27}
	_PgOutputType_index_1 = [...]uint8{0, 5}
	_PgOutputType_index_2 = [...]uint8{0, 5, 10}
	_PgOutputType_index_3 = [...]uint8{0, 4}
	_PgOutputType_index_4 = [...]uint8{0, 9}
	_PgOutputType_index_5 = [...]uint8{0, 11, 22}
	_PgOutputType_index_6 = [...]uint8{0, 15}
)

func (i PgOutputType) String() string {
	switch {
	case 66 <= i && i <= 69:
		i -= 66
		return _PgOutputType_name_0[_PgOutputType_index_0[i]:_PgOutputType_index_0[i+1]]
	case i == 72:
		return _PgOutputType_name_1
	case 80 <= i && i <= 81:
		i -= 80
		return _PgOutputType_name_2[_PgOutputType_index_2[i]:_PgOutputType_index_2[i+1]]
	case i == 83:
		return _PgOutputType_name_3
	case i == 88:
		return _PgOutputType_name_4
	case 99 <= i && i <= 100:
		i -= 99
		return _PgOutputType_name_5[_PgOutputType_index_5[i]:_PgOutputType_index_5[i+1]]
	case i == 112:
		return _PgOutputType_name_6
	default:
		return fmt.Sprintf("PgOutputType(%d)", i)
	}
}
